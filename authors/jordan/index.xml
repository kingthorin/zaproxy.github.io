<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jordan on OWASP ZAP</title>
    <link>/authors/jordan/</link>
    <description>Recent content in jordan on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Nov 2016 00:00:00 +0000</lastBuildDate><atom:link href="/authors/jordan/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Announcing the ZAP Jenkins Plugin</title>
      <link>/blog/2016-11-22-announcing-the-official-zap-jenkins-plugin/</link>
      <pubDate>Tue, 22 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/2016-11-22-announcing-the-official-zap-jenkins-plugin/</guid>
      <description>Using ZAP during the development process is now easier than ever. We are proud to present the Jenkins plugin, it extends the functionality of the ZAP security tool into a CI Environment.
The process explained A Jenkins CI Build step initializes ZAP Traffic flows (Regression Pack) through ZAP (Web Proxy) ZAP modifies requests to include Vulnerability Tests Target Application/Server sends Response back through ZAP ZAP sends reporting data back to Jenkins Jenkins publishes and archives the report(s) Jenkins creates JIRA tickets for the alerts The ZAP Jenkins plugin makes use of the readily available and diverse ZAP API, allowing you to use the same session files and scan policy profiles between ZAP and the Jenkins plugin, so they can be interchangeably loaded.</description>
    </item>
    
  </channel>
</rss>
