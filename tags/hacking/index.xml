<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hacking on OWASP ZAP</title>
    <link>/tags/hacking/</link>
    <description>Recent content in hacking on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/hacking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hacking ZAP - ZAP Extender Scripts</title>
      <link>/blog/2022-09-13-zap-extender-scripts/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-09-13-zap-extender-scripts/</guid>
      <description>An overview of ZAP Extender scripts with examples. Use ZAP as a web server, subscribe to internal ZAP events, and more!</description>
    </item>
    
    <item>
      <title>Hacking ZAP #4 - Active scan rules</title>
      <link>/blog/2014-04-30-hacking-zap-4-active-scan-rules/</link>
      <pubDate>Wed, 30 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014-04-30-hacking-zap-4-active-scan-rules/</guid>
      <description>Welcome to a series of blog posts aimed at helping you “hack the ZAP source code”.
The previous post in this series is: Hacking ZAP #3 - Passive scan rules
Active scan rules are another relatively simple way to enhance ZAP. Active scan rules attack the server, and therefore are only run when explicitly invoked by the user.</description>
    </item>
    
    <item>
      <title>Hacking ZAP #3 - Passive scan rules</title>
      <link>/blog/2014-04-03-hacking-zap-3-passive-scan-rules/</link>
      <pubDate>Thu, 03 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014-04-03-hacking-zap-3-passive-scan-rules/</guid>
      <description>Welcome to a series of blog posts aimed at helping you “hack the ZAP source code”.
The previous post in this series is: Hacking ZAP #2 - Getting Started
One of the easiest ways to enhance ZAP is to write new passive scan rules.
Passive scan rules are used to warn the user of potential vulnerabilities that can be detected passively - they are not allowed to make any new requests or manipulate the requests or responses in any way.</description>
    </item>
    
    <item>
      <title>Hacking ZAP #2 - Getting Started</title>
      <link>/blog/2014-03-20-hacking-zap-2-getting-started/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014-03-20-hacking-zap-2-getting-started/</guid>
      <description>Welcome to a series of blog posts aimed at helping you “hack the ZAP source code”.
The previous post in this series is: Hacking ZAP #1 - Why should you?
In order to change the ZAP source code you will need to set up a development environment.
Requirements The following software is used/required to obtain and build ZAP (core) and the add-ons:</description>
    </item>
    
    <item>
      <title>Hacking ZAP #1 - Why should you?</title>
      <link>/blog/2014-03-10-hacking-zap-1-why-should-you/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014-03-10-hacking-zap-1-why-should-you/</guid>
      <description>Welcome to a series of blog posts aimed at helping you “hack the ZAP source code”.
ZAP is an open source tool for finding vulnerabilities in web applications. It is the most active OWASP project and is very community focused - it probably has more contributors than any other web application security tool.</description>
    </item>
    
  </channel>
</rss>
