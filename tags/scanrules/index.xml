<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scanrules on OWASP ZAP</title>
    <link>/tags/scanrules/</link>
    <description>Recent content in scanrules on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/scanrules/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring4Shell Detection with ZAP</title>
      <link>/blog/2022-04-04-spring4shell-detection-with-zap/</link>
      <pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-04-04-spring4shell-detection-with-zap/</guid>
      <description>How to detect Spring4Shell with the new Spring4Shell Alpha Active Scan Rule.</description>
    </item>
    
    <item>
      <title>ZAP and Log4Shell</title>
      <link>/blog/2021-12-10-zap-and-log4shell/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/2021-12-10-zap-and-log4shell/</guid>
      <description>ZAP appears to be impacted by the Log4Shell vulnerability - CVE-2021-44228. We have released ZAP 2.11.1 which fixes the problem, this blog post gives more information and the impact on older versions of ZAP.</description>
    </item>
    
    <item>
      <title>Hacking ZAP #4 - Active scan rules</title>
      <link>/blog/2014-04-30-hacking-zap-4-active-scan-rules/</link>
      <pubDate>Wed, 30 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014-04-30-hacking-zap-4-active-scan-rules/</guid>
      <description>Welcome to a series of blog posts aimed at helping you “hack the ZAP source code”.
The previous post in this series is: Hacking ZAP #3 - Passive scan rules
Active scan rules are another relatively simple way to enhance ZAP. Active scan rules attack the server, and therefore are only run when explicitly invoked by the user.</description>
    </item>
    
    <item>
      <title>Hacking ZAP #3 - Passive scan rules</title>
      <link>/blog/2014-04-03-hacking-zap-3-passive-scan-rules/</link>
      <pubDate>Thu, 03 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014-04-03-hacking-zap-3-passive-scan-rules/</guid>
      <description>Welcome to a series of blog posts aimed at helping you “hack the ZAP source code”.
The previous post in this series is: Hacking ZAP #2 - Getting Started
One of the easiest ways to enhance ZAP is to write new passive scan rules.
Passive scan rules are used to warn the user of potential vulnerabilities that can be detected passively - they are not allowed to make any new requests or manipulate the requests or responses in any way.</description>
    </item>
    
  </channel>
</rss>
