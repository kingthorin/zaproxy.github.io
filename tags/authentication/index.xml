<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>authentication on OWASP ZAP</title>
    <link>/tags/authentication/</link>
    <description>Recent content in authentication on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/authentication/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Authentication Tester Dialog</title>
      <link>/blog/2023-05-23-authentication-tester/</link>
      <pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-05-23-authentication-tester/</guid>
      <description>There is now a &lt;em&gt;really&lt;/em&gt; easy way to check if ZAP can handle your app&amp;rsquo;s authentication.</description>
    </item>
    
    <item>
      <title>Authentication Auto-Detection</title>
      <link>/blog/2023-05-02-authentication-auto-detection/</link>
      <pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-05-02-authentication-auto-detection/</guid>
      <description>ZAP can now automatically detect and configure itself to handle common authentication mechanisms.</description>
    </item>
    
    <item>
      <title>Authenticating Using Selenium</title>
      <link>/blog/2023-02-01-authenticating-using-selenium/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-02-01-authenticating-using-selenium/</guid>
      <description>How to configure ZAP to handle complex authentication using Selenium.</description>
    </item>
    
    <item>
      <title>Authentication Help</title>
      <link>/blog/2023-01-19-authentication-help/</link>
      <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-01-19-authentication-help/</guid>
      <description>Handling authentication in automation is hard, but help is on its way.</description>
    </item>
    
    <item>
      <title>Authentication - Concepts</title>
      <link>/docs/authentication/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/concepts/</guid>
      <description>These are the concepts that you will need to understand in order to configure authentication in ZAP.
Contexts ZAP contexts are a way of relating a set of URLs together. You can define any contexts you like, but it is expected that a context will correspond to a web application.</description>
    </item>
    
    <item>
      <title>Authentication - Documented SSO Solutions</title>
      <link>/docs/authentication/documented-sso-solutions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/documented-sso-solutions/</guid>
      <description>The following SSO providers have documented solutions for automation.
We will aim to test ZAP with as many of these providers as possible in order to provide specific ZAP integration details. If you would like to help with this effort then please get in touch üòÅ.
LemonlDAP:NG Documentation: https://lemonldap-ng.</description>
    </item>
    
    <item>
      <title>Authentication - Make your Life Easier</title>
      <link>/docs/authentication/make-your-life-easier/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/make-your-life-easier/</guid>
      <description>Authentication is a key way of restricting access to an app. Some authentication mechanisms also make it significantly harder to use tools like ZAP, even for those people who have permission to use them.
Test in a Safe Environment Testing with valid credentials in a production environment is a really bad idea.</description>
    </item>
    
    <item>
      <title>Authentication - Manual</title>
      <link>/docs/authentication/manual-auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/manual-auth/</guid>
      <description>If you are just performing manual testing then authentication is generally easier.
With manual testing you should be exploring the target app manually with a browser that is proxying through ZAP. In this case you can just use the valid credentials in the browser and in most cases you will be logged in.</description>
    </item>
    
    <item>
      <title>Authentication - Session Handling</title>
      <link>/docs/authentication/session-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/session-handling/</guid>
      <description>If ZAP is handling authentication then it needs to handle sessions as well - logging in is of no use if ZAP does not maintain the session as the target app will just treat ZAP as being unauthenticated.
Session management configuration is part of a ZAP context.</description>
    </item>
    
    <item>
      <title>Authentication Methods</title>
      <link>/docs/authentication/authentication-methods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/authentication-methods/</guid>
      <description>Authentication Methods are the means by which ZAP actually authenticates to a web app.
The following methods are supported:
Manual Authentication This is the default method, and means that you are handling authentication yourself.
Auto Detect Auto-Detect Authentication indicates that the Authentication Request Identification passive scan rule should attempt to configure the Authentication method automatically.</description>
    </item>
    
    <item>
      <title>Auto-Detection</title>
      <link>/docs/authentication/auto-detection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/auto-detection/</guid>
      <description>ZAP has options for auto-detecting all of the different parts of authentication that it requires. If they work for your apps then it will make your life considerably easier, so this is the best place for you to start.
Authentication Tester Dialog The Authentication Tester Dialog is a quick and easy way to check if ZAP can automatically detect all of the information it needs - you only need to provide the URL of your login page and valid credentials.</description>
    </item>
    
    <item>
      <title>Diagnosing Authentication Problems</title>
      <link>/docs/authentication/diagnosing-auth-problems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/diagnosing-auth-problems/</guid>
      <description>If you ask a question related to authentication on one of the ZAP forums then you will be directed here.
We know that the ZAP authentication documentation needs improving. One of the reasons why it has not been improved is that we are too busy trying to answer authentication questions üòâ.</description>
    </item>
    
    <item>
      <title>Finding a Verification URL</title>
      <link>/docs/authentication/finding-a-verification-url/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/finding-a-verification-url/</guid>
      <description>If you need to set up ZAP to handle authentication then you really need to find a suitable verification URL in your app.
You should always try Auto Detection first as if this works it will find a suitable verification URL for you.
The verification URL will be one that you can request from the Manual Request Editor dialog and which will send a response that allows you to work out whether you are logged in or not.</description>
    </item>
    
    <item>
      <title>Handling Authentication Yourself (in Automation)</title>
      <link>/docs/authentication/handling-auth-yourself/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/authentication/handling-auth-yourself/</guid>
      <description>If you can generate an authentication token (e.g. to use in a header or cookie) and you know that your app will not invalidate it while you are using ZAP then one option is to handle authentication yourself.
In this case you take on the responsibility for handling the authentication and session handling.</description>
    </item>
    
  </channel>
</rss>
