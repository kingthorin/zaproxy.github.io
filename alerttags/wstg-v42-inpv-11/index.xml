<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WSTG-v42-INPV-11 on OWASP ZAP</title>
    <link>/alerttags/wstg-v42-inpv-11/</link>
    <description>Recent content in WSTG-v42-INPV-11 on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/alerttags/wstg-v42-inpv-11/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Expression Language Injection</title>
      <link>/docs/alerts/90025/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90025/</guid>
      <description>The software constructs all or part of an expression language (EL) statement in a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed. In certain versions of Spring 3.</description>
    </item>
    
    <item>
      <title>Log4Shell (CVE-2021-44228)</title>
      <link>/docs/alerts/40043-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40043-1/</guid>
      <description>Apache Log4j2 &amp;lt;=2.14.1 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled.</description>
    </item>
    
    <item>
      <title>Log4Shell (CVE-2021-45046)</title>
      <link>/docs/alerts/40043-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40043-2/</guid>
      <description>It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allow attackers to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments.</description>
    </item>
    
    <item>
      <title>Remote File Inclusion</title>
      <link>/docs/alerts/7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/7/</guid>
      <description>Remote File Include (RFI) is an attack technique used to exploit &amp;ldquo;dynamic file include&amp;rdquo; mechanisms in web applications. When web applications take user input (URL, parameter value, etc.) and pass them into file include commands, the web application might be tricked into including remote files with malicious code.</description>
    </item>
    
    <item>
      <title>Server Side Code Injection - ASP Code Injection</title>
      <link>/docs/alerts/90019-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90019-2/</guid>
      <description>A code injection may be possible including custom code that will be evaluated by the scripting engine</description>
    </item>
    
    <item>
      <title>Server Side Code Injection - PHP Code Injection</title>
      <link>/docs/alerts/90019-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90019-1/</guid>
      <description>A code injection may be possible including custom code that will be evaluated by the scripting engine</description>
    </item>
    
    <item>
      <title>Server Side Include</title>
      <link>/docs/alerts/40009/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40009/</guid>
      <description>Certain parameters may cause Server Side Include commands to be executed. This may allow database connection or arbitrary code to be executed.</description>
    </item>
    
    <item>
      <title>Text4shell (CVE-2022-42889)</title>
      <link>/docs/alerts/40047/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40047/</guid>
      <description>Apache Commons Text prior to 1.10.0 allows RCE when applied to untrusted input due to insecure interpolation defaults.Apache Commons Text performs variable interpolation, allowing properties to be dynamically evaluated and expanded.The application has been shown to initial contact with remote servers via variable interpolation and may well be vulnerable to Remote Code Execution (RCE).</description>
    </item>
    
  </channel>
</rss>
