<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZAP Scans on OWASP ZAP</title>
    <link>/docs/scans/</link>
    <description>Recent content in ZAP Scans on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/docs/scans/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ZAP vs Firing Range</title>
      <link>/docs/scans/firingrange/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/scans/firingrange/</guid>
      <description>Google Firing Range is a test bed for automated web application security scanners.
It is available online at https://public-firing-range.appspot.com/ and the GitHub repo is https://github.com/google/firing-range
It does not appear to be being actively maintained and some of the tests no longer appear to work with modern browsers.
Click on the Sections to see the full set of results, which also link to the online test page and the scan rule which should find the vulnerability.</description>
    </item>
    
    <item>
      <title>ZAP vs OWASP Benchmark</title>
      <link>/docs/scans/benchmark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/scans/benchmark/</guid>
      <description>OWASP Benchmark is a Java test suite designed to verify the speed and accuracy of vulnerability detection tools.
You can find the home page for the project at https://owasp.org/www-project-benchmark/ and the source code at https://github.com/OWASP-Benchmark/BenchmarkJava.
Click on the Sections to see the full set of results, which include the path of the test in the application and the scan rule which should find the vulnerability.</description>
    </item>
    
    <item>
      <title>ZAP vs Security Crawl Maze</title>
      <link>/docs/scans/crawlmaze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/scans/crawlmaze/</guid>
      <description>Google Security Crawl Maze is a comprehensive testbed for web security crawlers.
It is available online at https://security-crawl-maze.app/ and the GitHub repo is https://github.com/google/security-crawl-maze It does appear to be being actively maintained and has merged a fix that we submitted.
As long as one of the ZAP spiders finds the relevant page we count that as a pass, but ideally both spiders will find as many of the URLs as possible.</description>
    </item>
    
    <item>
      <title>ZAP vs Webseclab</title>
      <link>/docs/scans/webseclab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/scans/webseclab/</guid>
      <description>Yahoo Webseclab is a set of web security test cases and a toolkit to construct new ones. It can be used for testing security scanners, to replicate or reconstruct issues, or to help with investigations or discussions of particular types of web security bugs.
It is not available online, the GitHub repo is https://github.</description>
    </item>
    
    <item>
      <title>ZAP vs Websites Vulnerable to SSTI</title>
      <link>/docs/scans/ssti/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/scans/ssti/</guid>
      <description>Websites Vulnerable to SSTI is a set of simple servers which are vulnerable to Server Side Template Injection.
It is not available online, the GitHub repo is https://github.com/DiogoMRSilva/websitesVulnerableToSSTI It is actively maintained by a ZAP contributor: Diogo Silva.
The vulnerabilities are reported by various ZAP scan rules - if any of them find a vulnerability then we count that as a pass.</description>
    </item>
    
  </channel>
</rss>
