<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Features on OWASP ZAP</title>
    <link>/docs/desktop/start/features/</link>
    <description>Recent content in Features on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/docs/desktop/start/features/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Active Scan</title>
      <link>/docs/desktop/start/features/ascan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/ascan/</guid>
      <description>Active Scan Active scanning attempts to find potential vulnerabilities by using known attacks against the selected targets.
Active scanning is an attack on those targets.
You should NOT use it on web applications that you do not own.
In order to facilitate identifying ZAP traffic and Web Application Firewall exceptions, ZAP is accompanied by a script &amp;ldquo;AddZapHeader.</description>
    </item>
    
    <item>
      <title>Add-ons</title>
      <link>/docs/desktop/start/features/addons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/addons/</guid>
      <description>Add-ons Add-ons add additional functionality to ZAP.
They have full access to all of the ZAP internals, and so can provide very powerful new features.
You can dynamically install add-ons from the online Add-on Marketplace via the Manage Add-ons dialog.
You can typically add and remove add-ons to and from the ZAP UI without having to restart it.</description>
    </item>
    
    <item>
      <title>Alerts</title>
      <link>/docs/desktop/start/features/alerts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/alerts/</guid>
      <description>Alerts An alert is a potential vulnerability and is associated with a specific request.
A request can have more than one alert.
Alerts are shown in the UI with a flag indicating the risk:
High Medium Low Informational False Positive Alerts can be raised by various ZAP components, including but not limited to: active scanning, passive scanning, scripts, by addons (extensions), or manually using the Add Alert dialog (which also allows you to update or change alert details/information).</description>
    </item>
    
    <item>
      <title>Anti CSRF Handling</title>
      <link>/docs/desktop/start/features/anticsrf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/anticsrf/</guid>
      <description>Anti CSRF Tokens Anti CSRF tokens are (pseudo) random parameters used to protect against Cross Site Request Forgery (CSRF) attacks.
However they also make a penetration testers job harder, especially if the tokens are regenerated every time a form is requested.
ZAP detects anti CSRF tokens purely by attribute names - the list of attribute names considered to be anti CSRF tokens is configured using the Options Anti CSRF screen.</description>
    </item>
    
    <item>
      <title>API</title>
      <link>/docs/desktop/start/features/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/api/</guid>
      <description>API ZAP provides an Application Programming Interface (API) which allows you to interact with ZAP programmatically.
The API is available in JSON, HTML and XML formats.
A simple web UI which allows you to explore and use the API is available via the URL http://zap/ when you are proxying via ZAP, or via the host and port ZAP is listening on, eg http://localhost:8080/.</description>
    </item>
    
    <item>
      <title>Authentication</title>
      <link>/docs/desktop/start/features/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/authentication/</guid>
      <description>Authentication ZAP can handle a wide range of authentication mechanisms.
Each Context has:
an Authentication Method which defines how authentication is handled. The authentication is used to create Web Sessions that correspond to authenticated webapp Users. an Authentication Verification Strategy which defines how ZAP should detect when messages correspond to authenticated requests.</description>
    </item>
    
    <item>
      <title>Authentication Methods</title>
      <link>/docs/desktop/start/features/authmethods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/authmethods/</guid>
      <description>Authentication Methods ZAP handles multiple types of authentication (called Authentication Methods ) that can be used for websites / webapps. Each Context has an Authentication Method defined which dictates how authentication is handled. The authentication is used to create Web Sessions that correspond to authenticated webapp Users.</description>
    </item>
    
    <item>
      <title>Authentication Verification Strategies</title>
      <link>/docs/desktop/start/features/authstrategies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/authstrategies/</guid>
      <description>Authentication Verification Strategies Verification Strategies ZAP supports multiple Verification Strategies in order to detect when messages correspond to authenticated requests.
Check every Response When this strategy is used then ZAP will use the specified Regex Patterns on every response. This is typically useful for traditional webapps which return full HTML pages.</description>
    </item>
    
    <item>
      <title>Breakpoints</title>
      <link>/docs/desktop/start/features/breakpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/breakpoints/</guid>
      <description>Breakpoints A breakpoint allows you to intercept a request from your browser and to change it before is is submitted to the web application you are testing.
You can also change the responses received from the application
The request or response will be displayed in the Break tab which allows you to change disabled or hidden fields, and will allow you to bypass client side validation (often enforced using javascript).</description>
    </item>
    
    <item>
      <title>Callbacks</title>
      <link>/docs/desktop/start/features/callbacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/callbacks/</guid>
      <description>Callbacks Various ZAP components (scan rules, etc) may leverage payloads which result in HTTP requests back to ZAP. Such callback requests may be triggered by the spider(s), a user, or a future action from a tertiary system.
The ZAP GUI includes a panel in which such requests can be reviewed: Callbacks tab.</description>
    </item>
    
    <item>
      <title>Contexts</title>
      <link>/docs/desktop/start/features/contexts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/contexts/</guid>
      <description>Contexts Contexts are a way of relating a set of URLs together.
You can define any contexts you like, but it is expected that a context will correspond to a web application.
It is recommended that you define a new contexts for each web application that makes up the system you are testing, and set them in scope as you test each one.</description>
    </item>
    
    <item>
      <title>Custom Page</title>
      <link>/docs/desktop/start/features/custompages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/custompages/</guid>
      <description>Custom Page ZAP can accommodate the definition of various non-standard error handling conditions.
Each Context may include multiple Custom Page definitions, with the following elements:
Enabled &amp;gt; Whether the definition is enabled or not. Content &amp;gt; The String or Regex which defines the URL or response content to be matched.</description>
    </item>
    
    <item>
      <title>Data Driven Content</title>
      <link>/docs/desktop/start/features/ddc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/ddc/</guid>
      <description>Data Driven Content Data driven content is type of Structural Modifier which identifies URL paths that represent data.
In &amp;rsquo;traditional&amp;rsquo; web applications the structure of the application is typically defined by the URL paths and the data is contained in the URL parameters and POST data.
URLs like:</description>
    </item>
    
    <item>
      <title>Globally Excluded URLs</title>
      <link>/docs/desktop/start/features/globalexcludeurl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/globalexcludeurl/</guid>
      <description>Globally Excluded URLs Globally Excluded URLs are a set of Regular Expressions (regex) that ZAP ignores completely throughout the application. These URLs will not show up in the Proxy, Scanner, or Spider for ZAP. In addition, the URL regexs will be saved in the global configuration for ZAP and not inside of the session file.</description>
    </item>
    
    <item>
      <title>HTTP Sessions</title>
      <link>/docs/desktop/start/features/httpsessions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/httpsessions/</guid>
      <description>HTTP Sessions This tool keeps track of the existing HTTP Sessions on a particular Site and allows the Zaproxy user to force all requests to be on a particular session. Basically, it allows the user to easily switch between user sessions on a Site and to create a new Session without &amp;ldquo;destroying&amp;rdquo; the existing ones.</description>
    </item>
    
    <item>
      <title>Manipulator-in-the-middle Proxy</title>
      <link>/docs/desktop/start/features/intercept/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/intercept/</guid>
      <description>Manipulator-in-the-middle Proxy ZAP is a Manipulator-in-the-middle Proxy. It allows you to see all of the requests you make to a web app and all of the responses you receive from it.
Amongst other things this allows you to see AJAX calls that may not otherwise be obvious.</description>
    </item>
    
    <item>
      <title>Marketplace</title>
      <link>/docs/desktop/start/features/marketplace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/marketplace/</guid>
      <description>Marketplace ZAP Marketplace contains ZAP add-ons which have been written by the ZAP team and the community. The add-ons help to extend the functionalities of ZAP. You can browse and download add-ons from within ZAP by clicking on the &amp;lsquo;Manage Add-ons&amp;rsquo; button in the toolbar and then selecting the Marketplace tab.</description>
    </item>
    
    <item>
      <title>Modes</title>
      <link>/docs/desktop/start/features/modes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/modes/</guid>
      <description>Modes ZAP has a &amp;lsquo;mode&amp;rsquo; which can be:
Safe - no potentially dangerous operations permitted Protected - you can only perform (potentially) dangerous actions on URLs in the Scope Standard - as in previous releases, you can do anything ATTACK - new nodes that are in Scope are actively scanned as soon as they are discovered It is recommended that you use the Protected mode to ensure that you only attack sites that you mean to.</description>
    </item>
    
    <item>
      <title>Notes</title>
      <link>/docs/desktop/start/features/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/notes/</guid>
      <description>Notes A note is any text that you wish to associate with a request.
For example you could use notes to record details of extra tests that you need to perform on a request.
Notes are added and changed using the Add Note dialog.
Notes are flagged in the History tab with the icon.</description>
    </item>
    
    <item>
      <title>Passive Scan</title>
      <link>/docs/desktop/start/features/pscan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/pscan/</guid>
      <description>Passive Scan ZAP by default passively scans all HTTP messages (requests and responses) sent to the web application being tested.
Passive scanning does not change the requests nor the responses in any way and is therefore safe to use.
Scanning is performed in a background thread to ensure that it does not slow down the exploration of an application.</description>
    </item>
    
    <item>
      <title>Scan Policy</title>
      <link>/docs/desktop/start/features/scanpolicy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/scanpolicy/</guid>
      <description>Scan Policy A scan policy defines exactly which rules are run as part of an active scan.
It also defines how these rules run influencing how many requests are made and how likely potential issues are to be flagged.
You can define as many scan policies as you like and select the most appropriate one when you start the scan via the Active Scan Dialog.</description>
    </item>
    
    <item>
      <title>Scope</title>
      <link>/docs/desktop/start/features/scope/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/scope/</guid>
      <description>Scope The Scope is the set of URLs you are testing, and is defined by the Contexts you have specified.
By default nothing is in scope.
The Scope potentially changes:
What you can do, when you are in Protected mode What is shown in the History tab Protected - user can only perform (potentially) dangerous actions on URLs in the Scope Standard - as in previous releases, user can do anything ATTACK - new nodes that are in Scope are actively scanned as soon as they are discovered It is recommended that you define a new Context for each web application that makes up the system you are testing, and set them in scope as you test each one.</description>
    </item>
    
    <item>
      <title>Scripts</title>
      <link>/docs/desktop/start/features/scripts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/scripts/</guid>
      <description>Scripts ZAP supports scripts that can be embedded within ZAP and can access internal ZAP data structures and classes. These scripts allow you to dynamically enhance ZAP from within ZAP.
ZAP supports any scripting language that supports JSR 223 (http://www.jcp.org/en/jsr/detail?id=223) , including:
ECMAScript / JavaScript (using Nashorn engine, included by default) Zest https://developer.</description>
    </item>
    
    <item>
      <title>Session Management</title>
      <link>/docs/desktop/start/features/sessionmanagement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/sessionmanagement/</guid>
      <description>Session Management ZAP handles multiple types of session management (called Session Management Methods ) that can be used for websites / webapps. Each Context has a Session Management Method defined which dictates how sessions are kept.
Cookie-Based Session Management In the case of this method the session is being tracked through cookies.</description>
    </item>
    
    <item>
      <title>Sites Tree</title>
      <link>/docs/desktop/start/features/sitestree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/sitestree/</guid>
      <description>Sites Tree The Sites Tree is ZAP&amp;rsquo;s internal representation of the sites that you access and is displayed in the Sites tab. If it does not accurately reflect the sites then ZAP will not be able to attack them effectively. Each node in the tree represents a different piece of functionality in a site.</description>
    </item>
    
    <item>
      <title>Spider</title>
      <link>/docs/desktop/start/features/spider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/spider/</guid>
      <description>This page was moved.</description>
    </item>
    
    <item>
      <title>Statistics</title>
      <link>/docs/desktop/start/features/stats/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/stats/</guid>
      <description>Statistics ZAP maintains statistics which can help you understand what is really happening when interacting with large applications.
The statistics are available via the API and can be also sent to a Statsd server when configured via the Options Statistics screen.
The full set of statistics maintained by the ZAP core and add-ons are maintained on the ZAP website: Internal Statistics.</description>
    </item>
    
    <item>
      <title>Structural Modifiers</title>
      <link>/docs/desktop/start/features/structmods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/structmods/</guid>
      <description>Structural Modifiers Structural Modifiers are controls which change how ZAP represents the structure of the application.
The Sites Tree is ZAP&amp;rsquo;s representation of the application.
If it is not a good representation of the structure then ZAP will not be able to attack the application effectively.
There are currently 2 types of Structural Modifiers:</description>
    </item>
    
    <item>
      <title>Structural Parameters</title>
      <link>/docs/desktop/start/features/structparams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/structparams/</guid>
      <description>Structural Parameters Structural parameters are a type of Structural Modifier which identify parameters that represent application structure instead of user data.
In &amp;rsquo;traditional&amp;rsquo; web applications the structure of the application is typically defined by the URL paths and the data is contained in the URL parameters and POST data.</description>
    </item>
    
    <item>
      <title>Tags</title>
      <link>/docs/desktop/start/features/tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/tags/</guid>
      <description>Tags A tag is short piece of text that you wish to associate with a request.
A request can have multiple tags associated with it.
Tags can be added and changed using the Manage History Tags dialog.
They can also be automatically added via Passive scanning - this allows you to automatically tag pages which match a particular regular expression.</description>
    </item>
    
    <item>
      <title>Users</title>
      <link>/docs/desktop/start/features/users/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/desktop/start/features/users/</guid>
      <description>Users Users are the ZAP representations of websites/webapps&amp;rsquo; users. They allow certain actions to be performed from the point of view of an user of the webapps. For each Context, a set of Users can be defined, which can then be used in actions related to the context.</description>
    </item>
    
  </channel>
</rss>
